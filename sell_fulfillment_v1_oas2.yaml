swagger: '2.0'
info:
  description: Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
  version: v1.19.18
  title: Fulfillment API
  contact:
    name: eBay Inc.
  license:
    name: eBay API License Agreement
    url: https://go.developer.ebay.com/api-license-agreement
host: api.ebay.com
basePath: /sell/fulfillment/v1
schemes:
  - https
paths:
  /order/{orderId}:
    get:
      tags:
        - order
      description: 'Use this call to retrieve the contents of an order based on its unique identifier, <i>orderId</i>. This value was returned in the <b> getOrders</b> call''s <b>orders.orderId</b> field when you searched for orders by creation date, modification date, or fulfillment status. Include the optional <b>fieldGroups</b> query parameter set to <code>TAX_BREAKDOWN</code> to return a breakdown of the taxes and fees. <br /><br /> The returned <b>Order</b> object contains information you can use to create and process fulfillments, including: <ul> <li>Information about the buyer and seller</li> <li>Information about the order''s line items</li> <li> The plans for packaging, addressing and shipping the order</li> <li>The status of payment, packaging, addressing, and shipping the order</li> <li>A summary of monetary amounts specific to the order such as pricing, payments, and shipping costs</li> <li>A summary of applied taxes and fees, and optionally a breakdown of each </li></ul>'
      operationId: getOrder
      produces:
        - application/json
      parameters:
        - name: fieldGroups
          in: query
          description: The response type associated with the order. The only presently supported value is <code>TAX_BREAKDOWN</code>. This type returns a breakdown of tax and fee values associated with the order.
          required: false
          type: string
        - name: orderId
          in: path
          description: The unique identifier of the order. Order ID values are shown in My eBay/Seller Hub, and are also returned by the <b>getOrders</b> method in the <b>orders.orderId</b> field.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: Bad Request
          x-response-codes:
            errors:
              '32100':
                domain: API_FULFILLMENT
                category: REQUEST
                description: 'Invalid order ID: {orderId}'
              '32800':
                domain: API_FULFILLMENT
                category: REQUEST
                description: 'Invalid field group: {fieldGroup}'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          x-response-codes:
            errors:
              '30500':
                domain: API_FULFILLMENT
                category: APPLICATION
                description: System error
      security:
        - Authorization Code:
            - https://api.ebay.com/oauth/api_scope/sell.fulfillment
            - https://api.ebay.com/oauth/api_scope/sell.fulfillment.readonly
  /order:
    get:
      tags:
        - order
      description: 'Use this call to search for and retrieve one or more orders based on their creation date, last modification date, or fulfillment status using the <b>filter</b> parameter. You can alternatively specify a list of orders using the <b>orderIds</b> parameter. Include the optional <b>fieldGroups</b> query parameter set to <code>TAX_BREAKDOWN</code> to return a breakdown of the taxes and fees. <br /><br /> The returned <b>Order</b> objects contain information you can use to create and process fulfillments, including: <ul> <li>Information about the buyer and seller</li> <li>Information about the order''s line items</li> <li>The plans for packaging, addressing and shipping the order</li> <li>The status of payment, packaging, addressing, and shipping the order</li> <li>A summary of monetary amounts specific to the order such as pricing, payments, and shipping costs</li> <li>A summary of applied taxes and fees, and optionally a breakdown of each </li></ul> <br /><br /> <span class="tablenote"><strong>Important:</strong> In this call, the <b>cancelStatus.cancelRequests</b> array is returned but is always empty. Use the <b>getOrder</b> call instead, which returns this array fully populated with information about any cancellation requests.</span>'
      operationId: getOrders
      produces:
        - application/json
      parameters:
        - name: fieldGroups
          in: query
          description: The response type associated with the order. The only presently supported value is <code>TAX_BREAKDOWN</code>. This type returns a breakdown of tax and fee values associated with the order.
          required: false
          type: string
        - name: filter
          in: query
          description: 'One or more comma-separated criteria for narrowing down the collection of orders returned by this call. These criteria correspond to specific fields in the response payload. Multiple filter criteria combine to further restrict the results. <br /><br /> <span class="tablenote"><strong>Note:</strong> Currently, <b>filter</b> returns data from only the last 90 days. If the <b>orderIds</b> parameter is included in the request, the <b>filter</b> parameter will be ignored.</span> <br /><br /> The available criteria are as follows: <dl> <dt><code><b>creationdate</b></code></dt> <dd>The time period during which qualifying orders were created (the <b>orders.creationDate</b> field). In the URI, this is expressed as a starting timestamp, with or without an ending timestamp (in brackets). The timestamps are in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock.For example: <ul> <li><code>creationdate:[2016-02-21T08:25:43.511Z..]</code> identifies orders created on or after the given timestamp.</li> <li><code>creationdate:[2016-02-21T08:25:43.511Z..2016-04-21T08:25:43.511Z]</code> identifies orders created between the given timestamps, inclusive.</li> </ul> </dd> <dt><code><b>lastmodifieddate</b></code></dt> <dd>The time period during which qualifying orders were last modified (the <b>orders.modifiedDate</b> field).  In the URI, this is expressed as a starting timestamp, with or without an ending timestamp (in brackets). The timestamps are in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock.For example: <ul> <li><code>lastmodifieddate:[2016-05-15T08:25:43.511Z..]</code> identifies orders modified on or after the given timestamp.</li> <li><code>lastmodifieddate:[2016-05-15T08:25:43.511Z..2016-05-31T08:25:43.511Z]</code> identifies orders modified between the given timestamps, inclusive.</li> </ul> <span class="tablenote"><strong>Note:</strong> If <b>creationdate</b> and <b>lastmodifieddate</b> are both included, only <b>creationdate</b> is used.</span> <br /><br /></dd> <dt><code><b>orderfulfillmentstatus</b></code></dt> <dd>The degree to which qualifying orders have been shipped (the <b>orders.orderFulfillmentStatus</b> field). In the URI, this is expressed as one of the following value combinations: <ul> <li><code>orderfulfillmentstatus:{NOT_STARTED|IN_PROGRESS}</code> specifies orders for which no shipping fulfillments have been started, plus orders for which at least one shipping fulfillment has been started but not completed.</li> <li><code>orderfulfillmentstatus:{FULFILLED|IN_PROGRESS}</code> specifies orders for which all shipping fulfillments have been completed, plus orders for which at least one shipping fulfillment has been started but not completed.</li> </ul> <span class="tablenote"><strong>Note:</strong> The values <code>NOT_STARTED</code>, <code>IN_PROGRESS</code>, and <code>FULFILLED</code> can be used in various combinations, but only the combinations shown here are currently supported.</span> </dd> </dl> Here is an example of a <b>getOrders</b> call using all of these filters: <br /><br /> <code>GET https://api.ebay.com/sell/v1/order?<br />filter=<b>creationdate</b>:%5B2016-03-21T08:25:43.511Z..2016-04-21T08:25:43.511Z%5D,<br /><b>lastmodifieddate</b>:%5B2016-05-15T08:25:43.511Z..%5D,<br /><b>orderfulfillmentstatus</b>:%7BNOT_STARTED%7CIN_PROGRESS%7D</code> <br /><br /> <span class="tablenote"><strong>Note:</strong> This call requires that certain special characters in the URI query string be percent-encoded: <br /> &nbsp;&nbsp;&nbsp;&nbsp;<code>[</code> = <code>%5B</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>]</code> = <code>%5D</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>{</code> = <code>%7B</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>|</code> = <code>%7C</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>}</code> = <code>%7D</code> <br /> This query filter example uses these codes.</span> For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/sell/fulfillment/types/api:FilterField'
          required: false
          type: string
        - name: limit
          in: query
          description: The number of orders to return per page of the result set. Use this parameter in conjunction with the <b>offset</b> parameter to control the pagination of the output. <br /><br />For example, if <b>offset</b> is set to <code>10</code> and <b>limit</b> is set to <code>10</code>, the call retrieves orders 11 thru 20 from the result set. <br /><br /> If a limit is not set, the <b>limit</b> defaults to 50 and returns up to 50 orders. If a requested limit is more than 200, the call fails and returns an error.<br ><br> <span class="tablenote"><strong>Note:</strong> This feature employs a zero-based list, where the first item in the list has an offset of <code>0</code>. If the <b>orderIds</b> parameter is included in the request, this parameter will be ignored.</span> <br /><br /> <b>Maximum:</b> <code>200</code> <br /> <b>Default:</b> <code>50</code>
          required: false
          type: string
        - name: offset
          in: query
          description: Specifies the number of orders to skip in the result set before returning the first order in the paginated response.  <p>Combine <b>offset</b> with the <b>limit</b> query parameter to control the items returned in the response. For example, if you supply an <b>offset</b> of <code>0</code> and a <b>limit</b> of <code>10</code>, the first page of the response contains the first 10 items from the complete list of items retrieved by the call. If <b>offset</b> is <code>10</code> and <b>limit</b> is <code>20</code>, the first page of the response contains items 11-30 from the complete result set.</p> <p><b>Default:</b> 0</p>
          required: false
          type: string
        - name: orderIds
          in: query
          description: A comma-separated list of the unique identifiers of the orders to retrieve (maximum 50). If one or more order ID values are specified through the <b>orderIds</b> query parameter, all other query parameters will be ignored.
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderSearchPagedCollection'
        '400':
          description: Bad Request
          x-response-codes:
            errors:
              '30700':
                domain: API_FULFILLMENT
                category: REQUEST
                description: 'Invalid filter name: {fieldname}'
              '30800':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Invalid filter value {fieldvalue} for filter {fieldname}
              '30810':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Invalid date format
              '30820':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Start date is missing
              '30830':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Start date must be within 90 days of end date and current date.
              '30840':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Start date should be before end date
              '30850':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Start and end dates can't be in the future
              '30900':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Exceeded maximum number of order IDs (the current limit is <code>50</code>)
              '31000':
                domain: API_FULFILLMENT
                category: REQUEST
                description: 'Invalid offset: {offsetvalue}'
              '31100':
                domain: API_FULFILLMENT
                category: REQUEST
                description: 'Invalid limit: {limitvalue}'
              '32800':
                domain: API_FULFILLMENT
                category: REQUEST
                description: 'Invalid field group: {fieldGroup}'
        '500':
          description: Internal Server Error
          x-response-codes:
            errors:
              '30500':
                domain: API_FULFILLMENT
                category: APPLICATION
                description: System error
      security:
        - Authorization Code:
            - https://api.ebay.com/oauth/api_scope/sell.fulfillment
            - https://api.ebay.com/oauth/api_scope/sell.fulfillment.readonly
  /order/{order_id}/issue_refund:
    post:
      tags:
        - order
      summary: Issue Refund
      description: '<div class="msgbox_important"><p class="msgbox_importantInDiv" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #dd1e31;" class="mcFormatColor">Important!</span></b></span></span> Due to EU &amp; UK Payments regulatory requirements, an additional security verification via Digital Signatures is required for certain API calls that are made on behalf of EU/UK sellers, including <b>issueRefund</b>. Please refer to <a href="/develop/guides/digital-signatures-for-apis " target="_blank">Digital Signatures for APIs</a> to learn more on the impacted APIs and the process to create signatures to be included in the HTTP payload.</p></div><br/> This method allows a seller to issue a full or partial refund to a buyer for an order. Full or partial refunds can be issued at the order level or line item level.<br/><br/>The refunds issued through this method are processed asynchronously, so the refund will not show as ''Refunded'' right away. A seller will have to make a subsequent <a href="/api-docs/sell/fulfillment/resources/order/methods/getOrder" target="_blank">getOrder</a> call to check the status of the refund.  The status of an order refund can be found in the <a href="/api-docs/sell/fulfillment/resources/order/methods/getOrder#response.paymentSummary.refunds.refundStatus" target="_blank">paymentSummary.refunds.refundStatus</a> field of the <a href="/api-docs/sell/fulfillment/resources/order/methods/getOrder" target="_blank">getOrder</a> response.'
      operationId: issueRefund
      parameters:
        - name: order_id
          in: path
          description: The unique identifier of the order. Order IDs are returned in the <b>getOrders</b> method (and <b>GetOrders</b> call of Trading API). The <b>issueRefund</b> method supports the legacy API Order IDs and REST API order IDs.
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/IssueRefundRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Refund'
        '400':
          description: Bad Request
          x-response-codes:
            errors:
              '34901':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Order id can't be null or empty.
              '34902':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Request can't be empty.
              '34903':
                domain: API_FULFILLMENT
                category: REQUEST
                description: The refund reason must be specified.
              '34905':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Either orderLevelRefundAmount or refundItems must be specified.
              '34906':
                domain: API_FULFILLMENT
                category: REQUEST
                description: The amount value must be specified.
              '34907':
                domain: API_FULFILLMENT
                category: REQUEST
                description: The amount value must be positive and within two decimals.
              '34908':
                domain: API_FULFILLMENT
                category: REQUEST
                description: The amount currency must be specified.
              '34909':
                domain: API_FULFILLMENT
                category: REQUEST
                description: The amount currency isn't correct.
              '34910':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Either legacyReference or lineItemId must be specified for item level refund.
              '34911':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Legacy item id must be specified for item level refund if you use legacyReference.
              '34912':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Legacy transaction id must be specified for item level refund if you use legacyReference.
              '34914':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Can't find the item in the order.
              '34915':
                domain: API_FULFILLMENT
                category: REQUEST
                description: The refund amount exceeds order amount.
              '34916':
                domain: API_FULFILLMENT
                category: BUSINESS
                description: A post-transaction case exists on this order, seller refund can't be triggered.
              '34917':
                domain: API_FULFILLMENT
                category: BUSINESS
                description: This order was already refunded.
              '34920':
                domain: API_FULFILLMENT
                category: BUSINESS
                description: It's too late to issue a refund for this order.
              '34921':
                domain: API_FULFILLMENT
                category: REQUEST
                description: The comment exceeds the length limit, please make sure it doesn't exceed 1000 characters.
              '34922':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Refund can't be issued while previous refund is processing.
              '34923':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Refund cannot be issued for this type of order.
        '403':
          description: Access Forbidden
        '404':
          description: Resource Not found
          x-response-codes:
            errors:
              '34913':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Can not find the order.
        '409':
          description: Conflict
          x-response-codes:
            errors:
              '34918':
                domain: API_FULFILLMENT
                category: BUSINESS
                description: This is not an eBay managed payments order.
              '34919':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Unauthorized access.
              '34924':
                domain: API_FULFILLMENT
                category: BUSINESS
                description: The item refund amount exceeds the item remaining amount.
              '34925':
                domain: API_FULFILLMENT
                category: BUSINESS
                description: The refund operation could not be completed with any of the payment methods saved to the seller's account.
              '34926':
                domain: API_FULFILLMENT
                category: BUSINESS
                description: A suitable payment method could not be found for the refund operation. Please resolve in Seller Hub.
              '34927':
                domain: API_FULFILLMENT
                category: BUSINESS
                description: The selected payment method for the refund operation was invalid or declined.
              '34928':
                domain: API_FULFILLMENT
                category: BUSINESS
                description: Your refund did not go through because we could not verify your payment option. Please change your payment option and try again.
              '34929':
                domain: API_FULFILLMENT
                category: REQUEST
                description: You cannot refund this order yet since the buyer payment has not been processed. Please try again later.
              '34930':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Default payment method limit exceeded. Please use a different payment option or try again later.
        '500':
          description: Internal Server Error
          x-response-codes:
            errors:
              '34900':
                domain: API_FULFILLMENT
                category: APPLICATION
                description: There was a problem with an eBay internal system or process. Contact eBay developer support for assistance.
      security:
        - Authorization Code:
            - https://api.ebay.com/oauth/api_scope/sell.finances
  /order/{orderId}/shipping_fulfillment:
    get:
      tags:
        - shipping_fulfillment
      description: Use this call to retrieve the contents of all fulfillments currently defined for a specified order based on the order's unique identifier, <b>orderId</b>. This value is returned in the <b>getOrders</b> call's <b>members.orderId</b> field when you search for orders by creation date or shipment status.
      operationId: getShippingFulfillments
      produces:
        - application/json
      parameters:
        - name: orderId
          in: path
          description: The unique identifier of the order. Order ID values are shown in My eBay/Seller Hub, and are also returned by the <b>getOrders</b> method in the <b>orders.orderId</b> field.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ShippingFulfillmentPagedCollection'
        '400':
          description: Bad Request
          x-response-codes:
            errors:
              '32100':
                domain: API_FULFILLMENT
                category: REQUEST
                description: 'Invalid order ID: {orderId}'
        '500':
          description: Internal Server Error
          x-response-codes:
            errors:
              '30500':
                domain: API_FULFILLMENT
                category: APPLICATION
                description: System error
      security:
        - Authorization Code:
            - https://api.ebay.com/oauth/api_scope/sell.fulfillment
            - https://api.ebay.com/oauth/api_scope/sell.fulfillment.readonly
    post:
      tags:
        - shipping_fulfillment
      description: When you group an order's line items into one or more packages, each package requires a corresponding plan for handling, addressing, and shipping; this is a <i>shipping fulfillment</i>. For each package, execute this call once to generate a shipping fulfillment associated with that package. <br /><br /> <span class="tablenote"><strong>Note:</strong> A single line item in an order can consist of multiple units of a purchased item, and one unit can consist of multiple parts or components. Although these components might be provided by the manufacturer in separate packaging, the seller must include all components of a given line item in the same package.</span> <br /><br />Before using this call for a given package, you must determine which line items are in the package. If the package has been shipped, you should provide the date of shipment in the request. If not provided, it will default to the current date and time.
      operationId: createShippingFulfillment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: orderId
          in: path
          description: The unique identifier of the order. Order ID values are shown in My eBay/Seller Hub, and are also returned by the <b>getOrders</b> method in the <b>orders.orderId</b> field.
          required: true
          type: string
        - in: body
          name: body
          description: fulfillment payload
          required: true
          schema:
            $ref: '#/definitions/ShippingFulfillmentDetails'
      responses:
        '201':
          description: 'Created. The call also returns the following location code: <br /><br /><code>{ENV}/sell/fulfillment/v1/order/{ORDERID}/shipping_fulfillment/{FULFILLMENTID}</code> <br /><br />The <code>ENV</code> string is the HTTPS path to the same eBay supported environment in which this call was issued. The <code>ORDERID</code> parameter is the unique identifier of the order addressed by this call; for example, <code>01-03955-36441</code>. The <code>FULFILLMENTID</code> parameter identifies the newly created fulfillment; for example, <code>9405509699937003457459</code>. Use this Get Fulfillment URI to retrieve the contents of the new fulfillment.'
          schema:
            type: object
          headers:
            Location:
              type: string
              description: 'A successful call returns the following location code: <br /><br /><code>{ENV}/sell/fulfillment/v1/order/{ORDERID}/shipping_fulfillment/{FULFILLMENTID}</code> <br /><br />The <code>ENV</code> string is the HTTPS path to the same eBay supported environment in which this call was issued. The <code>ORDERID</code> parameter is the unique identifier of the order addressed by this call; for example, <code>01-03955-36441</code>. The <code>FULFILLMENTID</code> parameter identifies the newly created fulfillment; for example, <code>9405509699937003457459</code>. Use this Get Fulfillment URI to retrieve the contents of the new fulfillment.'
        '400':
          description: Bad Request
          x-response-codes:
            errors:
              '32100':
                domain: API_FULFILLMENT
                category: REQUEST
                description: 'Invalid Order Id: {orderId}'
              '32200':
                domain: API_FULFILLMENT
                category: REQUEST
                description: 'Invalid line item id: {lineItemId}'
              '32210':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Duplicate line item in the request
              '32300':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Invalid shipment tracking number or carrier
              '32400':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Requested user is suspended
              '32500':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Invalid shipped date
              '32600':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Invalid input data
              '34100':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Maximum tracking number for order is exceeded
              '34200':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Line Items contain Global Shipping Program and non-Global Shipping Program orders
              '34300':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Mark As Shipped for multiple Global Shipping Program line items is not supported
              '34500':
                domain: API_FULFILLMENT
                category: REQUEST
                description: Please use PUT operation for updating shipping fulfillment
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
          x-response-codes:
            errors:
              '30500':
                domain: API_FULFILLMENT
                category: APPLICATION
                description: System error
      security:
        - Authorization Code:
            - https://api.ebay.com/oauth/api_scope/sell.fulfillment
  /order/{orderId}/shipping_fulfillment/{fulfillmentId}:
    get:
      tags:
        - shipping_fulfillment
      description: Use this call to retrieve the contents of a fulfillment based on its unique identifier, <b>fulfillmentId</b> (combined with the associated order's <b>orderId</b>). The <b>fulfillmentId</b> value was originally generated by the <b>createShippingFulfillment</b> call, and is returned by the <b>getShippingFulfillments</b> call in the <b>members.fulfillmentId</b> field.
      operationId: getShippingFulfillment
      produces:
        - application/json
      parameters:
        - name: fulfillmentId
          in: path
          description: The unique identifier of the fulfillment. This eBay-generated value was created by the <b>Create Shipping Fulfillment</b> call, and returned by the <b>getShippingFulfillments</b> call in the <b>fulfillments.fulfillmentId</b> field; for example, <code>9405509699937003457459</code>.
          required: true
          type: string
        - name: orderId
          in: path
          description: The unique identifier of the order. Order ID values are shown in My eBay/Seller Hub, and are also returned by the <b>getOrders</b> method in the <b>orders.orderId</b> field.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ShippingFulfillment'
        '400':
          description: Bad Request
          x-response-codes:
            errors:
              '32100':
                domain: API_FULFILLMENT
                category: REQUEST
                description: 'Invalid order ID: {orderId}'
              '32110':
                domain: API_FULFILLMENT
                category: REQUEST
                description: 'Invalid shipping fulfillment ID: {fulfillmentId}'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          x-response-codes:
            errors:
              '30500':
                domain: API_FULFILLMENT
                category: APPLICATION
                description: System error
      security:
        - Authorization Code:
            - https://api.ebay.com/oauth/api_scope/sell.fulfillment
            - https://api.ebay.com/oauth/api_scope/sell.fulfillment.readonly
securityDefinitions:
  Authorization Code:
    description: The security definitions for this API. Please check individual operations for applicable scopes.
    type: oauth2
    authorizationUrl: https://auth.ebay.com/oauth2/authorize
    tokenUrl: https://api.ebay.com/identity/v1/oauth2/token
    flow: accessCode
    scopes:
      https://api.ebay.com/oauth/api_scope/sell.fulfillment: View and manage your order fulfillments
      https://api.ebay.com/oauth/api_scope/sell.finances: View and manage your payment and order information to display this information to you and allow you to initiate refunds using the third party application
      https://api.ebay.com/oauth/api_scope/sell.fulfillment.readonly: View your order fulfillments
definitions:
  Address:
    type: object
    properties:
      addressLine1:
        type: string
        description: The first line of the street address.
      addressLine2:
        type: string
        description: 'The second line of the street address. This field can be used for additional address information, such as a suite or apartment number. This field will be returned if defined for the shipping address. '
      city:
        type: string
        description: The city of the shipping destination.
      countryCode:
        type: string
        description: The country of the shipping destination, represented as a two-letter ISO 3166-1 alpha-2 country code. For example, <code>US</code> represents the United States, and <code>DE</code> represents Germany. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay API documentation</a>
      county:
        type: string
        description: The county of the shipping destination. Counties typically, but not always, contain multiple cities or towns. This field is returned if known/available.
      postalCode:
        type: string
        description: The postal code of the shipping destination. Usually referred to as Zip codes in the US. Most countries have postal codes, but not all. The postal code will be returned if applicable.
      stateOrProvince:
        type: string
        description: The state or province of the shipping destination. Most countries have states or provinces, but not all. The state or province will be returned if applicable.
    description: This type contains the details of a geographical address.
  Amount:
    type: object
    properties:
      convertedFromCurrency:
        type: string
        description: A three-letter ISO 4217 code that indicates the currency of the amount in the <b>convertedFromValue</b> field. This value is required or returned only if currency conversion/localization is required, and represents the pre-conversion currency. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CurrencyCodeEnum'>eBay API documentation</a>
      convertedFromValue:
        type: string
        description: The monetary amount before any conversion is performed, in the currency specified by the <b>convertedFromCurrency</b> field. This value is required or returned only if currency conversion/localization is required. The <b>value</b> field contains the converted amount of this value, in the currency specified by the <b>currency</b> field.
      currency:
        type: string
        description: A three-letter ISO 4217 code that indicates the currency of the amount in the <b>value</b> field. If currency conversion/localization is required, this is the post-conversion currency of the amount in the <b>value</b> field.<br /><br /><b>Default:</b> The default currency of the eBay marketplace that hosts the listing. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CurrencyCodeEnum'>eBay API documentation</a>
      value:
        type: string
        description: The monetary amount, in the currency specified by the <b>currency</b> field. If currency conversion/localization is required, this value is the converted amount, and the <b>convertedFromValue</b> field contains the amount in the original currency.  <br><br><i>Required in</i> the <b>amount</b> type.
    description: This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
  AppliedPromotion:
    type: object
    properties:
      description:
        type: string
        description: A description of the applied sales promotion.
      discountAmount:
        $ref: '#/definitions/Amount'
      promotionId:
        type: string
        description: An eBay-generated unique identifier of the sales promotion.<br/><br/> Multiple types of sales promotions are available to eBay Store owners, including order size/volume discounts, shipping discounts, special coupons, and price markdowns. Sales promotions can be managed through the Marketing tab of Seller Hub in My eBay, or by using the Trading API's <b>SetPromotionalSale</b> call or the Marketing API's <b>createItemPromotion</b> method.
    description: This type contains information about a sales promotion that is applied to a line item.
  Buyer:
    type: object
    properties:
      taxAddress:
        $ref: '#/definitions/TaxAddress'
      taxIdentifier:
        $ref: '#/definitions/TaxIdentifier'
      username:
        type: string
        description: The buyer's eBay user ID.
    description: This type contains information about the order's buyer.
  CancelRequest:
    type: object
    properties:
      cancelCompletedDate:
        type: string
        description: The date and time that the order cancellation was completed, if applicable. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is not returned until the cancellation request has actually been approved by the seller.<br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
      cancelInitiator:
        type: string
        description: This string value indicates the party who made the initial cancellation request. Typically, either the 'Buyer' or 'Seller'. If a cancellation request has been made, this field should be returned.
      cancelReason:
        type: string
        description: The reason why the <b>cancelInitiator</b> initiated the cancellation request. Cancellation reasons for a buyer might include 'order placed by mistake' or 'order won't arrive in time'. For a seller, a typical cancellation reason is 'out of stock'. If a cancellation request has been made, this field should be returned.
      cancelRequestedDate:
        type: string
        description: The date and time that the order cancellation was requested. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is returned for each cancellation request.<br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
      cancelRequestId:
        type: string
        description: The unique identifier of the order cancellation request. This field is returned for each cancellation request.
      cancelRequestState:
        type: string
        description: The current stage or condition of the cancellation request. This field is returned for each cancellation request. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:CancelRequestStateEnum'>eBay API documentation</a>
    description: This type contains information about a buyer request to cancel an order.
  CancelStatus:
    type: object
    properties:
      cancelledDate:
        type: string
        description: The date and time the order was cancelled, if applicable. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
      cancelRequests:
        type: array
        description: This array contains details of one or more buyer requests to cancel the order. <br /><br /><b>For the getOrders call:</b>  This array is returned but is always empty.<br /><b>For the getOrder call:</b> This array is returned fully populated with information about any cancellation requests.
        items:
          $ref: '#/definitions/CancelRequest'
      cancelState:
        type: string
        description: The state of the order with regard to cancellation. This field is always returned, and if there are no cancellation requests, a value of <code>NONE_REQUESTED</code> is returned.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:CancelStateEnum'>eBay API documentation</a>
    description: This type contains information about any requests that have been made to cancel an order.
  DeliveryCost:
    type: object
    properties:
      importCharges:
        $ref: '#/definitions/Amount'
      shippingCost:
        $ref: '#/definitions/Amount'
      shippingIntermediationFee:
        $ref: '#/definitions/Amount'
    description: This type contains a breakdown of all costs associated with the fulfillment of a line item.
  EbayCollectAndRemitTax:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Amount'
      ebayReference:
        $ref: '#/definitions/EbayTaxReference'
      taxType:
        type: string
        description: The type of tax and fees that eBay will collect and remit to the taxing or fee authority. See the <strong>TaxTypeEnum</strong> type definition for more information about each tax or fee type. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:TaxTypeEnum'>eBay API documentation</a>
      collectionMethod:
        type: string
        description: This field indicates the collection method used to collect the 'Collect and Remit' tax for the order. This field is always returned for orders subject to 'Collect and Remit' tax, and its value is always <code>NET</code>.<br /><br /><span class="tablenote"><strong>Note:</strong> Although the <strong>collectionMethod</strong> field is returned for all orders subject to 'Collect and Remit' tax, the <strong>collectionMethod</strong> field and the <strong>CollectionMethodEnum</strong> type are not currently of any practical use, although this field may have use in the future. If and when the logic of this field is changed, this note will be updated and a note will also be added to the Release Notes.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:CollectionMethodEnum'>eBay API documentation</a>
    description: This type contains information about the type and amount of tax that eBay will collect and remit to the state, province, country, or other taxing authority in the buyer's location, as required by that taxing authority.<br/><br/>'Collect and Remit' tax includes:<ul><li>US state-mandated sales tax</li><li>Federal and Provincial Sales Tax in Canada</li><li>'Goods and Services' tax in Canada, Australia, and New Zealand</li><li>VAT collected for the UK and EU countries</li></ul>
  EbayCollectedCharges:
    type: object
    properties:
      ebayShipping:
        $ref: '#/definitions/Amount'
    description: This type contains the breakdown of costs that are collected by eBay from the buyer.
  EbayFulfillmentProgram:
    type: object
    properties:
      fulfilledBy:
        type: string
        description: 'The value returned in this field indicates the party that is handling fulfillment of the order line item. <br /><br />Valid value: <code>EBAY</code>'
    description: This type is used to provide details about an order line item being fulfilled by eBay or an eBay fulfillment partner.
  EbayInternationalShipping:
    type: object
    properties:
      returnsManagedBy:
        type: string
        description: 'The value returned in this field indicates the party that is responsible for managing returns of the order line item.<br /><br />Valid value: <code>EBAY</code>'
    description: This type is used to provide details about an order line item being managed through eBay International Shipping.
  EbayShipping:
    type: object
    properties:
      shippingLabelProvidedBy:
        type: string
        description: This field contains the shipping label provider. If <code>EBAY</code>, this order is managed by eBay shipping and a free shipping label by eBay is downloadable by the seller via the eBay website.
    description: This type contains information about the management of the shipping for the order.
  EbayTaxReference:
    type: object
    properties:
      name:
        type: string
        description: 'This field value is returned to indicate the VAT tax type, which will vary by country/region. This string value will be one of the following:<ul><li><code>ABN</code>: if this string is returned, the ID in the <strong>value</strong> field is an Australia tax ID</li><li><code>DDG</code>: if this string is returned, it indicates that tax has been collected and remitted for Digitally Delivered Goods (DDG)</li><li><code>IOSS</code>: if this string is returned, the ID in the <strong>value</strong> field is an eBay EU or UK IOSS number</li><li><code>IRD</code>: if this string is returned, the ID in the <strong>value</strong> field is an eBay New Zealand tax ID</li><li><code>OSS</code>: if this string is returned, the ID in the <strong>value</strong> field is an  eBay Germany VAT ID</li><li><code>VOEC</code>: if this string is returned, the ID in the <strong>value</strong> field is an eBay Norway tax ID</li></ul>'
      value:
        type: string
        description: 'The value returned in this field is the VAT identifier number (VATIN), which will vary by country/region. This field will be returned if VAT tax is applicable for the order. The <strong>name</strong> field indicates the VAT tax type, which will vary by country/region: <ul><li><strong>ABN</strong>: <em>eBay AU tax ID</em></li><li><strong>IOSS</strong>: <em>eBay EU IOSS number</em> / <em>eBay UK IOSS number</em></li><li><strong>IRD</strong>: <em>eBay NZ tax ID</em></li><li><strong>OSS</strong>: <em>eBay DE VAT ID</em></li><li><strong>VOEC</strong>: <em>eBay NO number</em></li></ul>'
    description: This type describes the VAT tax details. The eBay VAT tax type and the eBay VAT identifier number will be returned if a VAT tax is applicable for the order. <p> <span class="tablenote"><b>Note:</b> On January 31, 2022, the <strong>orders.fulfillmentStartInstructions.shippingStep.shipTo.contactAddress.addressLine2</strong> will stop being used to return VAT information, so developers should make sure they integrate with the new fields before that time.</span></p>
  EbayVaultProgram:
    type: object
    properties:
      fulfillmentType:
        type: string
        description: 'This field specifies how an eBay vault order will be fulfilled. Supported options are:<ul><li><b>Seller to Vault</b>: the order will be shipped by the seller to an authenticator.</li><li><b>Vault to Vault</b>: the order will be shipped from an eBay vault to the buyer''s vault.</li><li><b>Vault to Buyer</b>: the order will be shipped from an eBay vault to the buyer''s shipping address.</li></ul> For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:EbayVaultFulfillmentTypeEnum''>eBay API documentation</a>'
  Error:
    type: object
    properties:
      category:
        type: string
        description: The context or source of this error or warning.
      domain:
        type: string
        description: The name of the domain containing the service or application. For example, <code>sell</code> is a domain.
      errorId:
        type: integer
        description: A positive integer that uniquely identifies the specific error condition that occurred. Your application can use these values as error code identifiers in your customized error-handling algorithms.
      inputRefIds:
        type: array
        description: A list of one or more specific request elements (if any) associated with the error or warning. The format of these strings depends on the request payload format. For JSON, use JSONPath notation.
        items:
          type: string
      longMessage:
        type: string
        description: An expanded version of the <b>message</b> field. <br /><br /><b>Maximum length:</b> 200 characters
      message:
        type: string
        description: A message about the error or warning which is device agnostic and readable by end users and application developers. It explains what the error or warning is, and how to fix it (in a general sense). If applicable, the value is localized to the end user's requested locale. <br /><br /><b>Maximum length:</b> 50 characters
      outputRefIds:
        type: array
        description: A list of one or more specific response elements (if any) associated with the error or warning. The format of these strings depends on the request payload format. For JSON, use JSONPath notation.
        items:
          type: string
      parameters:
        type: array
        description: Contains a list of name-value pairs that provide additional information concerning this error or warning. Each item in the list is an input parameter that contributed to the error or warning condition.
        items:
          $ref: '#/definitions/ErrorParameter'
      subdomain:
        type: string
        description: The name of the domain's subsystem or subdivision. For example, <code>fulfillment</code> is a subdomain in the <code>sell</code> domain.
    description: 'This type contains a error or warning related to a call request. '
  ErrorParameter:
    type: object
    properties:
      name:
        type: string
        description: This is the name of input field that caused an issue with the call request.
      value:
        type: string
        description: This is the actual value that was passed in for the element specified in the <strong>name</strong> field.
    description: This type contains the name and value of an input parameter that contributed to a specific error or warning condition.
  ExtendedContact:
    type: object
    properties:
      companyName:
        type: string
        description: The company name associated with the buyer or eBay shipping partner. This field is only returned if defined/applicable to the buyer or eBay shipping partner.
      contactAddress:
        $ref: '#/definitions/Address'
      email:
        type: string
        description: This field contains the email address of the buyer. This address will be returned for up to 14 days from order creation. If an order is more than 14 days old, no address is returned. <br /><br /> <span class="tablenote"> <strong>Note:</strong> If returned, this field contains the email address of the buyer, even for Global Shipping Program shipments.</span>
      fullName:
        type: string
        description: The full name of the buyer or eBay shipping partner.
      primaryPhone:
        $ref: '#/definitions/PhoneNumber'
    description: This type contains shipping and contact information for a buyer or an eBay shipping partner.
  FulfillmentStartInstruction:
    type: object
    properties:
      ebaySupportedFulfillment:
        type: boolean
        description: This field is only returned if its value is <code>true</code> and indicates that the fulfillment will be shipped via eBay's Global Shipping Program, eBay International Shipping, or the Authenticity Guarantee service program. <br /><br />For more information, see the <a href="https://www.ebay.com/help/selling/shipping-items/setting-shipping-options/global-shipping-program?id=4646 " target="_blank">Global Shipping Program</a> help topic.
      finalDestinationAddress:
        $ref: '#/definitions/Address'
      fulfillmentInstructionsType:
        type: string
        description: The enumeration value returned in this field indicates the method of fulfillment that will be used to deliver this set of line items (this package) to the buyer. This field will have a value of <code>SHIP_TO</code> if the <b>ebaySupportedFulfillment</b> field is returned with a value of <code>true</code>. See the <strong>FulfillmentInstructionsType</strong> definition for more information about different fulfillment types. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:FulfillmentInstructionsType'>eBay API documentation</a>
      maxEstimatedDeliveryDate:
        type: string
        description: This is the estimated latest date that the fulfillment will be completed. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is not returned ifthe value of the <b>fulfillmentInstructionsType</b> field is <code>DIGITAL</code> or <code>PREPARE_FOR_PICKUP</code>.  <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
      minEstimatedDeliveryDate:
        type: string
        description: This is the estimated earliest date that the fulfillment will be completed. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is not returned if  the value of the <b>fulfillmentInstructionsType</b> field is <code>DIGITAL</code> or <code>PREPARE_FOR_PICKUP</code>.  <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
      pickupStep:
        $ref: '#/definitions/PickupStep'
      shippingStep:
        $ref: '#/definitions/ShippingStep'
    description: This type contains a set of specifications for processing a fulfillment of an order, including the type of fulfillment, shipping carrier and service, addressing details, and estimated delivery window. These instructions are derived from the buyer's and seller's eBay account preferences, the listing parameters, and the buyer's checkout selections. The seller can use them as a starting point for packaging, addressing, and shipping the order.
  GiftDetails:
    type: object
    properties:
      message:
        type: string
        description: This field contains the gift message from the buyer to the gift recipient. This field is only returned if the buyer of the gift included a message for the gift.
      recipientEmail:
        type: string
        description: The email address of the gift recipient. The seller will send the digital gift card to this email address.
      senderName:
        type: string
        description: The name of the buyer, which will appear on the email that is sent to the gift recipient.
    description: This type contains information about a digital gift card line item that was purchased as a gift, and sent to the recipient by email.
  IssueRefundRequest:
    type: object
    properties:
      reasonForRefund:
        type: string
        description: The enumeration value passed into this field indicates the reason for the refund. One of the defined enumeration values in the <b>ReasonForRefundEnum</b> type must be used.<br/><br/>This field is required, and it is highly recommended that sellers use the correct refund reason, especially in the case of a buyer-requested cancellation or 'buyer remorse' return to indicate that there was nothing wrong with the item(s) or with the shipment of the order.<br/><br/><span class="tablenote"><strong>Note:</strong> If issuing refunds for more than one order line item, keep in mind that the refund reason must be the same for each of the order line items. If the refund reason is different for one or more order line items in an order, the seller would need to make separate <b>issueRefund</b> calls, one for each refund reason. </span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ReasonForRefundEnum'>eBay API documentation</a>
      comment:
        type: string
        description: 'This free-text field allows the seller to clarify why the refund is being issued to the buyer.<br/><br/><b>Max Length</b>: 100'
      refundItems:
        type: array
        description: The <b>refundItems</b> array is only required if the seller is issuing a refund for one or more individual order line items in a multiple line item order. Otherwise, the seller just uses the <b>orderLevelRefundAmount</b> container to specify the amount of the refund for the entire order.
        items:
          $ref: '#/definitions/RefundItem'
      orderLevelRefundAmount:
        $ref: '#/definitions/SimpleAmount'
    description: The base type used by the request payload of the <b>issueRefund</b> method.
  ItemLocation:
    type: object
    properties:
      countryCode:
        type: string
        description: The two-letter <a href="https://www.iso.org/iso-3166-country-codes.html " title="https://www.iso.org " target="_blank">ISO 3166</a> code representing the country of the address. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay API documentation</a>
      location:
        type: string
        description: Indicates the geographical location of the item (along with the value in the <strong>countryCode</strong> field). This field provides city, province, state, or similar information.
      postalCode:
        type: string
        description: The postal code of the address.
    description: This type describes the physical location of an order.
  LegacyReference:
    type: object
    properties:
      legacyItemId:
        type: string
        description: The unique identifier of a listing in legacy/Trading API format. <br/><br/><span class="tablenote"><strong>Note:</strong> Both <b>legacyItemId</b> and <b>legacyTransactionId</b> are needed to identify an order line item. </span>
      legacyTransactionId:
        type: string
        description: The unique identifier of a sale/transaction in legacy/Trading API format. A 'transaction ID' is created once a buyer purchases a 'Buy It Now' item or if an auction listing ends with a winning bidder. <br/><br/><span class="tablenote"><strong>Note:</strong> Both <b>legacyItemId</b> and <b>legacyTransactionId</b> are needed to identify an order line item. </span>
    description: Type defining the <b>legacyReference</b> container. This container is needed if the seller is issuing a refund for an individual order line item, and wishes to use an item ID and transaction ID to identify the order line item.
  LineItem:
    type: object
    properties:
      appliedPromotions:
        type: array
        description: This array contains information about one or more sales promotions or discounts applied to the line item. It is always returned, but will be returned as an empty array if no special sales promotions or discounts apply to the order line item.
        items:
          $ref: '#/definitions/AppliedPromotion'
      deliveryCost:
        $ref: '#/definitions/DeliveryCost'
      discountedLineItemCost:
        $ref: '#/definitions/Amount'
      ebayCollectAndRemitTaxes:
        type: array
        description: This container will be returned if the order line item is subject to a 'Collect and Remit' tax that eBay will collect and remit to the proper taxing authority on the buyer's behalf.<br/><br/>'Collect and Remit' tax includes:<ul><li>US state-mandated sales tax</li><li>Federal and Provincial Sales Tax in Canada</li><li>'Goods and Services' tax in Canada, Australia, and New Zealand</li><li>VAT collected for the UK and EU countries</li></ul>The amount of this tax is shown in the <strong>amount</strong> field, and the type of tax is shown in the <strong>taxType</strong> field.<br/><br/>eBay will display the tax type and amount during checkout in accordance with the buyer's address, and handle collection and remittance of the tax without requiring the seller to take any action.
        items:
          $ref: '#/definitions/EbayCollectAndRemitTax'
      ebayCollectedCharges:
        $ref: '#/definitions/EbayCollectedCharges'
      giftDetails:
        $ref: '#/definitions/GiftDetails'
      itemLocation:
        $ref: '#/definitions/ItemLocation'
      legacyItemId:
        type: string
        description: The eBay-generated legacy listing item ID of the listing. Note that the unique identifier of a listing in REST-based APIs is called the <strong>listingId</strong> instead.
      legacyVariationId:
        type: string
        description: The unique identifier of a single variation within a multiple-variation listing. This field is only returned if the line item purchased was from a multiple-variation listing.
      lineItemCost:
        $ref: '#/definitions/Amount'
      lineItemFulfillmentInstructions:
        $ref: '#/definitions/LineItemFulfillmentInstructions'
      lineItemFulfillmentStatus:
        type: string
        description: This enumeration value indicates the current fulfillment status of the line item. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:LineItemFulfillmentStatusEnum'>eBay API documentation</a>
      lineItemId:
        type: string
        description: This is the unique identifier of an eBay order line item. This field is created as soon as there is a commitment to buy from the seller.
      listingMarketplaceId:
        type: string
        description: The unique identifier of the eBay marketplace where the line item was listed. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:MarketplaceIdEnum'>eBay API documentation</a>
      properties:
        $ref: '#/definitions/LineItemProperties'
      purchaseMarketplaceId:
        type: string
        description: The unique identifier of the eBay marketplace where the line item was listed. Often, the <strong>listingMarketplaceId</strong> and the <strong>purchaseMarketplaceId</strong> identifier are the same, but there are occasions when an item will surface on multiple eBay marketplaces. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:MarketplaceIdEnum'>eBay API documentation</a>
      quantity:
        type: integer
        description: The number of units of the line item in the order. These are represented as a group by a single <b>lineItemId</b>.
      refunds:
        type: array
        description: This array is always returned, but is returned as an empty array unless the seller has submitted a partial or full refund to the buyer for the order. If a refund has occurred, the refund amount and refund date will be shown for each refund.
        items:
          $ref: '#/definitions/LineItemRefund'
      sku:
        type: string
        description: Seller-defined Stock-Keeping Unit (SKU). This inventory identifier must be unique within the seller's eBay inventory. SKUs are optional when listing in the legacy/Trading API system, but SKUs are required when listing items through the Inventory API model.
      soldFormat:
        type: string
        description: The eBay listing type of the line item. The most common listing types are <code>AUCTION</code> and <code>FIXED_PRICE</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:SoldFormatEnum'>eBay API documentation</a>
      taxes:
        type: array
        description: Contains a list of taxes applied to the line item, if any. This array is always returned, but will be returned as empty if no taxes are applicable to the line item.
        items:
          $ref: '#/definitions/Tax'
      title:
        type: string
        description: The title of the listing.
      total:
        $ref: '#/definitions/Amount'
      variationAspects:
        type: array
        description: An array of aspect name-value pairs that identifies the specific variation of a multi-variation listing. This array can contain multiple name-value pairs, such as <code>color:blue</code> and <code>size:large</code>, and will only be returned for orders created from a multiple-variation listing.
        items:
          $ref: '#/definitions/NameValuePair'
    description: This type contains the details of each line item in an order.
  LineItemFulfillmentInstructions:
    type: object
    properties:
      guaranteedDelivery:
        type: boolean
        description: This field is returned as <code>true</code> if the order line item is qualified for eBay Guaranteed Delivery, or <code>false</code> if it is not eligible. Only domestic shipments are available for eBay Guaranteed Delivery. At this time, eBay Guaranteed Delivery is only available to a select number of sellers on the US and Australia sites, but this feature will be enabled on more eBay sites in 2019.<br/><br/>  There are two different eBay Guaranteed Delivery options - 'Handling time' option and 'Door-to-Door' option. With both options, the seller is commiting to getting the order delivered to the buyer within three business days after purchase. <br/><br/> With the 'Handling time' option, the seller's stated handling time for a listing must be 'same-day' or '1-day', and at least one of the available shipping service options should have a shipping time that guarantees that the buyer receives the order on time. With this option, eBay will set the 'ship-by date' and expected delivery window for the seller, and the seller should just make sure they physically ship the order by the <strong>shipToDate</strong>.<br/><br/> With the 'Door-to-door' option, the seller must create regional shipping rate tables (with shipping costs and delivery times based on destination regions), and then apply these regional shipping rates/delivery times to the listing. <br/><br/> If a 'Door-to-door' order does not arrive on time, the seller must refund the buyer the full shipping cost (if any), and the buyer also has the option of returning the item for a full refund, and the seller will also have to pay the return shipping cost. With 'Handling time' option, as long as the seller meets the stated handling time, and ships using the correct shipping service option, eBay will refund the buyer the shipping cost and pay for return shipping label (if buyer wants to return item) if the order arrives after the expected delivery time. <br/><br/> For more information on the details and requirements of eBay Guaranteed Delivery, see the <a href="https://www.ebay.com/help/selling/shipping-items/offering-ebay-guaranteed-delivery?id=4645 " target="_blank">Offering eBay Guaranteed Delivery</a> help topic.<br/><br/> This field will always be returned regardless of whether the listing site offers eBay Guaranteed Delivery or if the seller is opted in to the feature.
      maxEstimatedDeliveryDate:
        type: string
        description: The estimated latest date and time that the buyer can expect to receive the line item based on the seller's stated handling time and the transit times of the available shipping service options. If the listing is eligible for eBay Guaranteed Delivery (value of <b>guaranteedDelivery</b> field is <code>true</code>, the seller must pay extra attention to this date, as a failure to deliver by this date/time can result in a 'Late shipment' seller defect, and can affect seller level and Top-Rated Seller status. In addition to the seller defect, buyers will be eligible for a shipping cost refund, and will also be eligible to return the item for a full refund (with no return shipping charge) if they choose. <br /><br /><span class="tablenote"><strong>Note:</strong> This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code></span>
      minEstimatedDeliveryDate:
        type: string
        description: The estimated earliest date and time that the buyer can expect to receive the line item based on the seller's stated handling time and the transit times of the available shipping service options.<br /><br /><span class="tablenote"><strong>Note:</strong> This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code></span>
      shipByDate:
        type: string
        description: The latest date and time by which the seller should ship line item in order to meet the expected delivery window. This timestamp will be set by eBay based on time of purchase and the seller's stated handling time. If the listing is eligible for eBay Guaranteed Delivery (value of <b>guaranteedDelivery</b> field is <code>true</code>, the seller must pay extra attention to this date, as a failure to physically ship the line item by this date/time can result in a 'Late shipment' seller defect, and can affect seller level and Top-Rated Seller status. In addition to the seller defect, buyers will be eligible for a shipping cost refund, and will also be eligible to return the item for a full refund (with no return shipping charge) if they choose. <br /><br /><span class="tablenote"><strong>Note:</strong> This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code></span>
    description: This type contains the specifications for processing the fulfillment of a line item, including the handling window and the delivery window. These fields provide guidance for <i>eBay Guaranteed Delivery</i> as well as for non-guaranteed delivery.
  LineItemProperties:
    type: object
    properties:
      buyerProtection:
        type: boolean
        description: A value of <code>true</code> indicates that the line item is covered by eBay's Buyer Protection program.
      fromBestOffer:
        type: boolean
        description: This field is only returned if <code>true</code> and indicates that the purchase occurred by the buyer and seller mutually agreeing on a Best Offer amount. The Best Offer feature can be set up for any listing type, but if this feature is set up for an auction listing, it will no longer be available once a bid has been placed on the listing.
      soldViaAdCampaign:
        type: boolean
        description: This field is only returned if <code>true</code> and indicates that the line item was sold as a result of a seller's ad campaign.
    description: This type contains information about the eBay programs under which a line item was listed and sold.
  LineItemReference:
    type: object
    properties:
      lineItemId:
        type: string
        description: This is the unique identifier of the eBay order line item that is part of the shipping fulfillment. The line item ID is created as soon as there is a commitment to buy from the seller.
      quantity:
        type: integer
        description: This field is reserved for internal or future use.
    description: This type identifies the line item and quantity of that line item that comprises one fulfillment, such as a shipping package.
  LineItemRefund:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Amount'
      refundDate:
        type: string
        description: The date and time that the refund was issued for the line item. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is not returned until the refund has been issued. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
      refundId:
        type: string
        description: Unique identifier of a refund that was initiated for an order's line item through the <b>issueRefund</b> method. If the <b>issueRefund</b> method was used to issue a refund at the order level, this identifier is returned at the order level instead (<b>paymentSummary.refunds.refundId</b> field).<br/><br/> A <b>refundId</b> value is returned in the response of the <b>issueRefund</b> method, and this same value will be returned in the <b>getOrder</b> and <b>getOrders</b> responses for pending and completed refunds.
      refundReferenceId:
        type: string
        description: This field is reserved for internal or future use.
    description: This type contains refund information for a line item.
  NameValuePair:
    type: object
    properties:
      name:
        type: string
        description: The text representing the name of the aspect for the name-value pair. For example, <code>color</code>.
      value:
        type: string
        description: The value of the aspect for the name-value pair. For example, <code>red</code>.
    description: This type contains the name-value specifics of a multi-variation listing that has been bought.
  Order:
    type: object
    properties:
      buyer:
        $ref: '#/definitions/Buyer'
      buyerCheckoutNotes:
        type: string
        description: 'This field contains any comments that the buyer left for the seller about the order during checkout process. This field is only returned if a buyer left comments at checkout time. '
      cancelStatus:
        $ref: '#/definitions/CancelStatus'
      creationDate:
        type: string
        description: The date and time that the order was created. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
      ebayCollectAndRemitTax:
        type: boolean
        description: This field is only returned if <code>true</code>, and indicates that eBay will collect tax (US state-mandated sales tax, Federal and Provincial Sales Tax in Canada, 'Goods and Services' tax in Canada, Australia, and New Zealand, and VAT collected for UK and EU countries,) for at least one line item in the order, and remit the tax to the taxing authority of the buyer's residence. If this field is returned, the seller should search for one or more <strong>ebayCollectAndRemitTaxes</strong> containers at the line item level to get more information about the type of tax and the amount.
      fulfillmentHrefs:
        type: array
        description: This array contains a list of one or more <strong>getShippingFulfillment</strong> call URIs that can be used to retrieve shipping fulfillments that have been set up for the order.
        items:
          type: string
      fulfillmentStartInstructions:
        type: array
        description: This container consists of a set of specifications for fulfilling the order, including the type of fulfillment, shipping carrier and service, shipping address, and estimated delivery window. These instructions are derived from the buyer's and seller's eBay account preferences, the listing parameters, and the buyer's checkout selections. The seller can use them as a starting point for packaging, addressing, and shipping the order.<br /><br /><span class="tablenote"><strong>Note:</strong> Although this container is presented as an array, it currently returns only one set of fulfillment specifications. Additional array members will be supported in future functionality.</span>
        items:
          $ref: '#/definitions/FulfillmentStartInstruction'
      lastModifiedDate:
        type: string
        description: The date and time that the order was last modified. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
      legacyOrderId:
        type: string
        description: The unique identifier of the order in legacy format, as traditionally used by the Trading API (and other legacy APIs). Both the <b>orderId</b> field and this field are always returned.
      lineItems:
        type: array
        description: This array contains the details for all line items that comprise the order.
        items:
          $ref: '#/definitions/LineItem'
      orderFulfillmentStatus:
        type: string
        description: The degree to which fulfillment of the order is complete. See the <strong>OrderFulfillmentStatus</strong> type definition for more information about each possible fulfillment state. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:OrderFulfillmentStatus'>eBay API documentation</a>
      orderId:
        type: string
        description: The unique identifier of the order. Both the <b>legacyOrderId</b> field (traditionally used by Trading and other legacy APIS) and this field are always returned.
      orderPaymentStatus:
        type: string
        description: The enumeration value returned in this field indicates the current payment status of an order, or in case of a refund request, the current status of the refund. See the <strong>OrderPaymentStatusEnum</strong> type definition for more information about each possible payment/refund state. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:OrderPaymentStatusEnum'>eBay API documentation</a>
      paymentSummary:
        $ref: '#/definitions/PaymentSummary'
      pricingSummary:
        $ref: '#/definitions/PricingSummary'
      program:
        $ref: '#/definitions/Program'
      salesRecordReference:
        type: string
        description: An eBay-generated identifier that is used to identify and manage orders through the Selling Manager and Selling Manager Pro tools. This order identifier can also be found on the Orders grid page and in the Sales Record pages in Seller Hub. A <strong>salesRecordReference</strong> number is only generated and returned at the order level, and not at the order line item level.<br><br> In cases where the seller does not have a Selling Manager or Selling Manager Pro subscription nor access to Seller Hub, this field may not be returned.
      sellerId:
        type: string
        description: The unique eBay user ID of the seller who sold the order.
      totalFeeBasisAmount:
        $ref: '#/definitions/Amount'
      totalMarketplaceFee:
        $ref: '#/definitions/Amount'
    description: This type contains the details of an order, including information about the buyer, order history, shipping fulfillments, line items, costs, payments, and order fulfillment status.
  OrderRefund:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Amount'
      refundDate:
        type: string
        description: The date and time that the refund was issued. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is not returned until the refund has been issued. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
      refundId:
        type: string
        description: Unique identifier of a refund that was initiated for an order through the <b>issueRefund</b> method. If the <b>issueRefund</b> method was used to issue one or more refunds at the line item level, these refund identifiers are returned at the line item level instead (<b>lineItems.refunds.refundId</b> field).<br/><br/> A <b>refundId</b> value is returned in the response of the <b>issueRefund</b> method, and this same value will be returned in the <b>getOrders</b> and <b>getOrders</b> responses for pending and completed refunds. For other refunds, see the <b>refundReferenceId</b> field.
      refundReferenceId:
        type: string
        description: The eBay-generated unique identifier for the refund. This field is not returned until the refund has been issued.
      refundStatus:
        type: string
        description: This enumeration value indicates the current status of the refund to the buyer. This container is always returned for each refund. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:RefundStatusEnum'>eBay API documentation</a>
    description: This type contains information about a refund issued for an order. This does not include line item level refunds.
  OrderSearchPagedCollection:
    type: object
    properties:
      href:
        type: string
        description: The URI of the <b>getOrders</b> call request that produced the current page of the result set.
      limit:
        type: integer
        description: The maximum number of orders returned per page of the result set. The <strong>limit</strong> value can be passed in as a query parameter, or if omitted, its value defaults to <code>50</code>. <br /><br /><span class="tablenote"><strong>Note:</strong> If this is the last or only page of the result set, the page may contain fewer orders than the <strong>limit</strong> value.  To determine the number of pages in a result set, divide the <b>total</b> value (total number of orders matching input criteria) by this <strong>limit</strong> value, and then round up to the next integer. For example, if the <b>total</b> value was <code>120</code> (120 total orders) and the <strong>limit</strong> value was <code>50</code> (show 50 orders per page), the total number of pages in the result set is three, so the seller would have to make three separate <strong>getOrders</strong> calls to view all orders matching the input criteria. </span><b>Default:</b> <code>50</code>
      next:
        type: string
        description: 'The <b>getOrders</b> call URI to use if you wish to view the  next page of the result set. For example, the following URI returns records 41 thru 50 from the collection of orders: <br /><br /><code><i>path</i>/order?limit=10&offset=40 </code><br/><br/>This field is only returned if there is a next page of results to view based on the current input criteria.<br />'
      offset:
        type: integer
        description: 'The number of results skipped in the result set before listing the first returned result. This value can be set in the request with the <b>offset</b> query parameter. <p class="tablenote"><strong>Note: </strong>The items in a paginated result set use a zero-based list where the first item in the list has an offset of <code>0</code>.</p>'
      orders:
        type: array
        description: This array contains one or more orders that are part of the current result set, that is controlled by the input criteria. The details of each order include information about the buyer, order history, shipping fulfillments, line items, costs, payments, and order fulfillment status. <br /><br />By default, orders are returned according to creation date (oldest to newest), but the order will vary according to any filter that is set in request.
        items:
          $ref: '#/definitions/Order'
      prev:
        type: string
        description: 'The <b>getOrders</b> call URI for the previous result set. For example, the following URI returns orders 21 thru 30 from the collection of orders: <br /><br /><code><i>path</i>/order?limit=10&offset=20</code><br/><br/>This field is only returned if there is a previous page of results to view based on the current input criteria.'
      total:
        type: integer
        description: The total number of orders in the results set based on the current input criteria.<br /><br /><span class="tablenote"><strong>Note:</strong> If no orders are found, this field is returned with a value of <code>0</code>.</span>
      warnings:
        type: array
        description: This array is returned if one or more errors or warnings occur with the call request.
        items:
          $ref: '#/definitions/Error'
    description: This type contains the specifications for the collection of orders that match the search or filter criteria of a <b>getOrders</b> call. The collection is grouped into a result set, and based on the query parameters that are set (including the <strong>limit</strong> and <strong>offset</strong> parameters), the result set may included multiple pages, but only one page of the result set can be viewed at a time.
  Payment:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Amount'
      paymentDate:
        type: string
        description: The date and time that the payment was received by the seller. This field will not be returned if buyer has yet to pay for the order. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
      paymentHolds:
        type: array
        description: This container is only returned if eBay is temporarily holding the seller's funds for the order. If a payment hold has been placed on the order, this container includes the reason for the payment hold, the expected release date of the funds into the seller's account, the current state of the hold, and as soon as the payment hold has been released, the actual release date.
        items:
          $ref: '#/definitions/PaymentHold'
      paymentMethod:
        type: string
        description: The payment method used to pay for the order. See the <strong>PaymentMethodTypeEnum</strong> type for more information on the payment methods. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:PaymentMethodTypeEnum'>eBay API documentation</a>
      paymentReferenceId:
        type: string
        description: This field is only returned if payment has been made by the buyer, and the <strong>paymentMethod</strong> is <code>ESCROW</code>. This field contains a special ID for ESCROW.
      paymentStatus:
        type: string
        description: The enumeration value returned in this field indicates the status of the payment for the order. See the <strong>PaymentStatusEnum</strong> type definition for more information on the possible payment states. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:PaymentStatusEnum'>eBay API documentation</a>
    description: This type is used to provide details about the seller payments for an order.
  PaymentHold:
    type: object
    properties:
      expectedReleaseDate:
        type: string
        description: The date and time that the payment being held is expected to be released to the seller. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field will be returned if known by eBay. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
      holdAmount:
        $ref: '#/definitions/Amount'
      holdReason:
        type: string
        description: The reason that the payment is being held. A seller's payment may be held for a number of reasons, including when the seller is new, the seller's level is below standard, or if a return case or 'Significantly not as described' case is pending against the seller. This field is always returned with the <strong>paymentHolds</strong> array.
      holdState:
        type: string
        description: The current stage or condition of the hold. This field is always returned with the <strong>paymentHolds</strong> array.<br /><br /><b>Applicable values:</b><ul><li><code>HELD</code></li><li><code>HELD_PENDING</code></li><li><code>NOT_HELD</code></li><li><code>RELEASE_CONFIRMED</code></li><li><code>RELEASE_FAILED</code></li><li><code>RELEASE_PENDING</code></li><li><code>RELEASED</code></li></ul>
      releaseDate:
        type: string
        description: The date and time that the payment being held was actually released to the seller. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field is not returned until the seller's payment is actually released into the seller's account.<br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
      sellerActionsToRelease:
        type: array
        description: A list of one or more possible actions that the seller can take to expedite the release of the payment hold.
        items:
          $ref: '#/definitions/SellerActionsToRelease'
    description: This type contains information about a hold placed on a payment to a seller for an order, including the reason why the buyer's payment for the order is being held, the expected release date of the funds into the seller's account, the current state of the hold, and the actual release date if the payment has been released, and possible actions the seller can take to expedite the payout of funds into their account.
  PaymentSummary:
    type: object
    properties:
      payments:
        type: array
        description: This array consists of payment information for the order, including payment status, payment method, payment amount, and payment date. This array is always returned, although some of the fields under this container will not be returned until payment has been made.
        items:
          $ref: '#/definitions/Payment'
      refunds:
        type: array
        description: This array is always returned, but is returned as an empty array unless the seller has submitted a partial or full refund to the buyer for the order. If a refund has occurred, the refund amount and refund date will be shown for each refund.
        items:
          $ref: '#/definitions/OrderRefund'
      totalDueSeller:
        $ref: '#/definitions/Amount'
    description: This type contains information about the various monetary exchanges that apply to the net balance due for the order.
  PhoneNumber:
    type: object
    properties:
      phoneNumber:
        type: string
        description: The primary telephone number for the shipping recipient.
    description: This type contains a string field representing a telephone number.
  PickupStep:
    type: object
    properties:
      merchantLocationKey:
        type: string
        description: A merchant-defined unique identifier of the merchant's store where the buyer will pick up their In-Store Pickup order.<br/><br/> This field is always returned with the <b>pickupStep</b> container.
    description: This type is used to indicate the merchant's store where the buyer will pickup their In-Store Pickup order. The <b>pickupStep</b> container is only returned for In-Store Pickup orders. The In-Store Pickup feature is supported in the US, Canada, UK, Germany, and Australia marketplaces.
  PostSaleAuthenticationProgram:
    type: object
    properties:
      outcomeReason:
        type: string
        description: This field indicates the result of the authenticity verification inspection on an order line item. This field is not returned when the status value of the order line item is <code>PENDING</code> or <code>PASSED</code>. The possible values returned here are <code>NOT_AUTHENTIC</code>, <code>NOT_AS_DESCRIBED</code>, <code>CUSTOMIZED</code>, <code>MISCATEGORIZED</code>, or <code>NOT_AUTHENTIC_NO_RETURN</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:AuthenticityVerificationReasonEnum'>eBay API documentation</a>
      status:
        type: string
        description: The value in this field indicates whether the order line item has passed or failed the authenticity verification inspection, or if the inspection and/or results are still pending. The possible values returned here are <code>PENDING</code>, <code>PASSED</code>, <code>FAILED</code>, or <code>PASSED_WITH_EXCEPTION</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:AuthenticityVerificationStatusEnum'>eBay API documentation</a>
    description: This type is used to provide the status and outcome of an order line item going through the Authenticity Guarantee verification process.
  PricingSummary:
    type: object
    properties:
      adjustment:
        $ref: '#/definitions/Amount'
      deliveryCost:
        $ref: '#/definitions/Amount'
      deliveryDiscount:
        $ref: '#/definitions/Amount'
      fee:
        $ref: '#/definitions/Amount'
      priceDiscountSubtotal:
        $ref: '#/definitions/Amount'
      priceSubtotal:
        $ref: '#/definitions/Amount'
      tax:
        $ref: '#/definitions/Amount'
      total:
        $ref: '#/definitions/Amount'
    description: This type contains a summary of cumulative costs and charges for all line items of an order, including item price, price adjustments, sales taxes, delivery costs, and order discounts.
  Program:
    type: object
    properties:
      authenticityVerification:
        $ref: '#/definitions/PostSaleAuthenticationProgram'
      ebayShipping:
        $ref: '#/definitions/EbayShipping'
      ebayVault:
        $ref: '#/definitions/EbayVaultProgram'
      ebayInternationalShipping:
        $ref: '#/definitions/EbayInternationalShipping'
      fulfillmentProgram:
        $ref: '#/definitions/EbayFulfillmentProgram'
    description: This type is returned for order line items eligible for the Authenticity Guarantee service and/or for order line items fulfilled by the eBay Fulfillment program or eBay shipping.
  Refund:
    type: object
    properties:
      refundId:
        type: string
        description: The unique identifier of the order refund. This value is returned unless the refund operation fails (<b>refundStatus</b> value shows <code>FAILED</code>). This identifier can be used to track the status of the refund through a <b>getOrder</b> or <b>getOrders</b> call. For order-level refunds, check the <b>paymentSummary.refunds.refundId</b> field in the <b>getOrder</b>/<b>getOrders</b> response, and for line item level refunds, check the <b>lineItems.refunds.refundId</b> field(s) in the <b>getOrder</b>/<b>getOrders</b> response.
      refundStatus:
        type: string
        description: The value returned in this field indicates the success or failure of the refund operation. A successful <b>issueRefund</b> operation should result in a value of <code>PENDING</code>. A failed <b>issueRefund</b> operation should result in a value of <code>FAILED</code>, and an HTTP status code and/or and API error code may also get returned to possibly indicate the issue.<br/><br/>The refunds issued through this method are processed asynchronously, so the refund will not show as 'Refunded' right away. A seller will have to make a subsequent <a href="https://developer.ebay.com/api-docs/sell/fulfillment/resources/order/methods/getOrder" target="_blank">getOrder</a> call to check the status of the refund.  The status of an order refund can be found in the <a href="https://developer.ebay.com/api-docs/sell/fulfillment/resources/order/methods/getOrder#response.paymentSummary.refunds.refundStatus" target="_blank">paymentSummary.refunds.refundStatus</a> field of the <a href="https://developer.ebay.com/api-docs/sell/fulfillment/resources/order/methods/getOrder" target="_blank">getOrder</a> response. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:RefundStatusEnum'>eBay API documentation</a>
    description: This is the base type of the <b>issueRefund</b> response payload. As long as the <b>issueRefund</b> method does not trigger an error, a response payload will be returned.
  RefundItem:
    type: object
    properties:
      refundAmount:
        $ref: '#/definitions/SimpleAmount'
      lineItemId:
        type: string
        description: The unique identifier of an order line item. This identifier is created once a buyer purchases a 'Buy It Now' item or if an auction listing ends with a winning bidder. Either this field or the <b>legacyReference</b> container is needed to identify an individual order line item that will receive a refund.<br/><br/><span class="tablenote"><strong>Note:</strong> The <b>lineItemId</b> field is used to identify an order line item in REST API format, and the  <b>legacyReference</b> container is used to identify an order line item in Trading/legacy API format. Both legacy and REST API identifiers are returned in <b>getOrder</b> (Fulfillment API) and <b>GetOrders</b> (Trading API).</span>
      legacyReference:
        $ref: '#/definitions/LegacyReference'
    description: This type is used if the seller is issuing a refund for one or more individual order line items in a multiple line item order. Otherwise, the seller just uses the <b>orderLevelRefundAmount</b> container to specify the amount of the refund for the entire order.
  SellerActionsToRelease:
    type: object
    properties:
      sellerActionToRelease:
        type: string
        description: A possible action that the seller can take to expedite the release of a payment hold. A <strong>sellerActionToRelease</strong> field is returned for each possible action that a seller may take. Possible actions may include providing shipping/tracking information, issuing a refund, providing refund information, contacting customer support, etc.
    description: This type is used to state possible action(s) that a seller can take to release a payment hold placed against an order.
  ShippingFulfillment:
    type: object
    properties:
      fulfillmentId:
        type: string
        description: The unique identifier of the fulfillment; for example, <code>9405509699937003457459</code>. This eBay-generated value is created with a successful <b>createShippingFulfillment</b> call.
      lineItems:
        type: array
        description: This array contains a list of one or more line items (and purchased quantity) to which the fulfillment applies.
        items:
          $ref: '#/definitions/LineItemReference'
      shipmentTrackingNumber:
        type: string
        description: The tracking number provided by the shipping carrier for the package shipped in this fulfillment. This field is returned if available.
      shippedDate:
        type: string
        description: The date and time that the fulfillment package was shipped. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. This field should only be returned if the package has been shipped.<br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
      shippingCarrierCode:
        type: string
        description: The eBay code identifying the shipping carrier for this fulfillment. This field is returned if available. <br /><br /><span class="tablenote"><strong>Note:</strong> The Trading API's <b>ShippingCarrierCodeType</b> enumeration type contains the most current list of eBay shipping carrier codes and the countries served by each carrier. See <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/types/ShippingCarrierCodeType.html " target="_blank">ShippingCarrierCodeType</a>.</span>
    description: This type contains the complete details of an existing fulfillment for an order.
  ShippingFulfillmentDetails:
    type: object
    properties:
      lineItems:
        type: array
        description: This array contains a list of or more line items and the quantity that will be shipped in the same package.
        items:
          $ref: '#/definitions/LineItemReference'
      shippedDate:
        type: string
        description: This is the actual date and time that the fulfillment package was shipped. This timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC) clock. The seller should use the actual date/time that the package was shipped, but if this field is omitted, it will default to the current date/time.<br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code><br /><br /><b>Default:</b> The current date and time.
      shippingCarrierCode:
        type: string
        description: The unique identifier of the shipping carrier being used to ship the line item(s). Technically, the <strong>shippingCarrierCode</strong> and <strong>trackingNumber</strong> fields are optional, but generally these fields will be provided if the shipping carrier and tracking number are known. <br /><br /><span class="tablenote"><strong>Note:</strong> Use the Trading API's <a href="https://developer.ebay.com/devzone/XML/docs/Reference/eBay/GeteBayDetails.html " target="_blank">GeteBayDetails</a> call to retrieve the latest shipping carrier enumeration values. When making the <a href="https://developer.ebay.com/devzone/XML/docs/Reference/eBay/GeteBayDetails.html " target="_blank">GeteBayDetails</a> call, include the <strong>DetailName</strong> field in the request payload and set its value to <code>ShippingCarrierDetails</code>. Each valid shipping carrier enumeration value is returned in a <strong>ShippingCarrierDetails.ShippingCarrier</strong> field in the response payload.</span>
      trackingNumber:
        type: string
        description: The tracking number provided by the shipping carrier for this fulfillment. The seller should be careful that this tracking number is accurate since the buyer will use this tracking number to track shipment, and eBay has no way to verify the accuracy of this number.<br /><br />This field and the <b>shippingCarrierCode</b> field are mutually dependent. If you include one, you must also include the other.<br /><br /><span class="tablenote"><strong>Note:</strong> If you include <b>trackingNumber</b> (and <b>shippingCarrierCode</b>) in the request, the resulting fulfillment's ID (returned in the HTTP location code) is the tracking number. If you do not include shipment tracking information, the resulting fulfillment ID will default to an arbitrary number such as <code>999</code>.</span><br /><span class="tablenote"><strong>Note:</strong> Only alphanumeric characters are supported for shipment tracking numbers. Spaces, hyphens, and all other special characters are not supported. Do not include a space in the tracking number even if a space appears in the tracking number on the shipping label.</span>
    description: This type contains the details for creating a fulfillment for an order.
  ShippingFulfillmentPagedCollection:
    type: object
    properties:
      fulfillments:
        type: array
        description: This array contains one or more fulfillments required for the order that was specified in method endpoint.
        items:
          $ref: '#/definitions/ShippingFulfillment'
      total:
        type: integer
        description: The total number of fulfillments in the specified order.<br /><br /><span class="tablenote"><strong>Note:</strong> If no fulfillments are found for the order, this field is returned with a value of <code>0</code>.</span>
      warnings:
        type: array
        description: This array is only returned if one or more errors or warnings occur with the call request.
        items:
          $ref: '#/definitions/Error'
    description: This type contains the specifications for the entire collection of shipping fulfillments that are associated with the order specified by a <b>getShippingFulfillments</b> call. The <b>fulfillments</b> container returns an array of all the fulfillments in the collection.
  ShippingStep:
    type: object
    properties:
      shippingCarrierCode:
        type: string
        description: The unique identifier of the shipping carrier being used to ship the line item. <br /><br /><span class="tablenote"><strong>Note:</strong> The Trading API's <a href="https://developer.ebay.com/devzone/XML/docs/Reference/eBay/GeteBayDetails.html " target="_blank">GeteBayDetails</a> call can be used to retrieve the latest shipping carrier and shipping service option enumeration values.</span>
      shippingServiceCode:
        type: string
        description: The unique identifier of the shipping service option being used to ship the line item.<br /><br /><span class="tablenote"><strong>Note:</strong> Use the Trading API's <a href="https://developer.ebay.com/devzone/XML/docs/Reference/eBay/GeteBayDetails.html " target="_blank">GeteBayDetails</a> call to retrieve the latest shipping carrier and shipping service option enumeration values. When making the <a href="https://developer.ebay.com/devzone/XML/docs/Reference/eBay/GeteBayDetails.html " target="_blank">GeteBayDetails</a> call, include the <strong>DetailName</strong> field in the request payload and set its value to <code>ShippingServiceDetails</code>. Each valid shipping service option (returned in <strong>ShippingServiceDetails.ShippingService</strong> field) and corresponding shipping carrier (returned in <strong>ShippingServiceDetails.ShippingCarrier</strong> field) is returned in response payload.</span>
      shipTo:
        $ref: '#/definitions/ExtendedContact'
      shipToReferenceId:
        type: string
        description: 'This is the unique identifer of the Global Shipping Program (GSP) shipment. This field is only returned if the line item is being shipped via GSP (the value of the <b>fulfillmentStartInstructions.ebaySupportedFulfillment</b> field will be <code>true</code>. The international shipping provider uses the <b>shipToReferenceId</b> value as the primary reference number to retrieve the relevant details about the buyer, the order, and the fulfillment, so the shipment can be completed. <br /><br />Sellers must include this value on the shipping label immediately above the street address of the international shipping provider. <br /><br />Example: "Reference #1234567890123456" <br /><br /><span class="tablenote"><strong>Note:</strong> This value is the same as the <b>ShipToAddress.ReferenceID</b> value returned by the Trading API''s GetOrders call.</span>'
    description: This type contains shipping information for a fulfillment, including the shipping carrier, the shipping service option, the shipment destination, and the Global Shipping Program reference ID.
  SimpleAmount:
    type: object
    properties:
      currency:
        type: string
        description: A three-letter ISO 4217 code (such as <code>USD</code> for US site) that indicates the currency of the amount in the <b>value</b> field. Both the <b>value</b> and <b>currency</b> fields are required when expressing the amount of the refund. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CurrencyCodeEnum'>eBay API documentation</a>
      value:
        type: string
        description: 'The monetary amount of the refund. Only use a maximum of two digits to the right of the decimal point. Both the <b>value</b> and <b>currency</b> fields are required when expressing the amount of the refund. '
    description: This type defines the monetary value of the refund amount, and the currency used.
  Tax:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Amount'
      taxType:
        type: string
        description: Tax type. This field is only available when <strong>fieldGroups</strong> is set to <code>TAX_BREAKDOWN</code>. If the order has fees, a breakdown of the fees is also provided. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:TaxTypeEnum'>eBay API documentation</a>
    description: This type contains information about any sales tax applied to a line item.
  TaxAddress:
    type: object
    properties:
      city:
        type: string
        description: The city name that can be used by sellers for tax purpose.
      countryCode:
        type: string
        description: The country code that can be used by sellers for tax purpose, represented as a two-letter ISO 3166-1 alpha-2 country code. For example, <strong>US</strong> represents the United States, and <strong>DE</strong> represents Germany. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay API documentation</a>
      postalCode:
        type: string
        description: The postal code that can be used by sellers for tax purpose. Usually referred to as Zip codes in the US.
      stateOrProvince:
        type: string
        description: The state name that can be used by sellers for tax purpose.
    description: This container consists of address information that can be used by sellers for tax purpose.
  TaxIdentifier:
    type: object
    properties:
      taxpayerId:
        type: string
        description: This value is the unique tax ID associated with the buyer. The type of tax identification is shown in the <strong>taxIdentifierType</strong> field.
      taxIdentifierType:
        type: string
        description: This enumeration value indicates the type of tax identification being used for the buyer. The different tax types are defined in the <strong>TaxIdentifierTypeEnum</strong> type. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:TaxIdentifierTypeEnum'>eBay API documentation</a>
      issuingCountry:
        type: string
        description: This two-letter code indicates the country that issued the buyer's tax ID. The country that the two-letter code represents can be found in the <strong>CountryCodeEnum</strong> type, or in the  <a href="https://www.iso.org/iso-3166-country-codes.html ">ISO 3166</a> standard. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay API documentation</a>
    description: This type is used by the <strong>taxIdentifier</strong> container that is returned in <strong>getOrder</strong>. The <strong>taxIdentifier</strong> container consists of taxpayer identification information for buyers from Italy, Spain, or Guatemala. It is currently only returned for orders occurring on the eBay Italy or eBay Spain marketplaces.<br /><br /><span class="tablenote"><strong>Note:</strong> Currently, the <strong>taxIdentifier</strong> container is only returned in <strong>getOrder</strong> and not in <strong>getOrders</strong>. So, if a seller wanted to view a buyer's tax information for a particular order returned in <strong>getOrders</strong>, that seller would need to use the <strong>orderId</strong> value for that particular order, and then run a <strong>getOrder</strong> call against that order ID. </span>
